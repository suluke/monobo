
# Step 1: Download archive from github
FetchContent_Declare(
  json_test_suite
  GIT_REPOSITORY https://github.com/nst/JSONTestSuite.git
  GIT_TAG        master
)
FetchContent_Populate(json_test_suite)

# Step 2: Patch runner script to learn about our test driver
set(JSON_TESTSUITE_EXE "${json_test_suite_SOURCE_DIR}/run_tests.py")
set(JSON_TESTSUITE_EXE_PATCHED "${json_test_suite_SOURCE_DIR}/run_tests_patched.py")
add_custom_command(
  OUTPUT "${JSON_TESTSUITE_EXE_PATCHED}"
  COMMAND "${CMAKE_COMMAND}" -D INPUT_FILE="${JSON_TESTSUITE_EXE}" -D OUTPUT_FILE="${JSON_TESTSUITE_EXE_PATCHED}" -P "${CMAKE_CURRENT_LIST_DIR}/PatchScript.cmake"
  WORKING_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}"
  DEPENDS "${JSON_TESTSUITE_EXE}" PatchScript.cmake
)
# Step 3: Create filter.json
set(JSON_TESTSUITE_FILTER_JSON "${json_test_suite_SOURCE_DIR}/jsontestsuite_programs.json")
add_custom_command(
  OUTPUT "${JSON_TESTSUITE_FILTER_JSON}"
  COMMAND "${CMAKE_COMMAND}" -D OUTPUT_FILE="${JSON_TESTSUITE_FILTER_JSON}" -P "${CMAKE_CURRENT_LIST_DIR}/CreateFilterJson.cmake"
  WORKING_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}"
)

# Step 4: Make it possible to generate the same report as would be generated by the official
#         upstream project "JSONTestSuite".
add_custom_target(JSONTestSuite
  COMMAND python3 "${JSON_TESTSUITE_EXE_PATCHED}" --filter="${JSON_TESTSUITE_FILTER_JSON}"
  DEPENDS "${JSON_TESTSUITE_EXE_PATCHED}" "${JSON_TESTSUITE_FILTER_JSON}" json_validate
  USES_TERMINAL
)

# The official reports are rarely needed, however. It's much more useful to be able to run the test corpus
# as part of our ctest-based CI pipeline. We need to ship our own driver for that purpose.
configure_file(defs.h.in jsontestsuite_driver_defs.h @ONLY)
add_executable(jsontestsuite_driver driver.cc jsontestsuite_driver_defs.h)
target_include_directories(jsontestsuite_driver PRIVATE ${CMAKE_CURRENT_BINARY_DIR})
target_link_libraries(jsontestsuite_driver PRIVATE
  cli_args
  json_schema
  gtest
  # FIXME needs platform-specific coding
  stdc++fs
)
gtest_discover_tests(jsontestsuite_driver
  TEST_PREFIX "jsontestsuite/"
)
