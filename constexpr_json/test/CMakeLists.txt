add_executable(cjson_basic basic.cc)
target_link_libraries(cjson_basic PRIVATE constexpr_json gtest_main)
gtest_discover_tests(cjson_basic)

add_executable(cjson_static_unittests static_unittests.cc)
target_link_libraries(cjson_static_unittests PRIVATE constexpr_json)
add_test(NAME cjson_static_unittests COMMAND cjson_static_unittests)

include(GenerateJsonHeader)
generate_json_header("${CMAKE_CURRENT_BINARY_DIR}/json_schema.h" "json_schema.json")
add_executable(cjson_json_schema_test json_schema_test.cc "${CMAKE_CURRENT_BINARY_DIR}/json_schema.h")
target_include_directories(cjson_json_schema_test PRIVATE "${CMAKE_CURRENT_BINARY_DIR}")
target_link_libraries(cjson_json_schema_test PRIVATE constexpr_json)
if (CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
  target_compile_options(cjson_json_schema_test PRIVATE "-fconstexpr-steps=10000000")
endif()
add_test(NAME cjson_json_schema_test COMMAND cjson_json_schema_test)

add_executable(cjson_printer_test printer_test.cc "${CMAKE_CURRENT_BINARY_DIR}/json_schema.h")
target_include_directories(cjson_printer_test PRIVATE "${CMAKE_CURRENT_BINARY_DIR}")
target_link_libraries(cjson_printer_test PRIVATE constexpr_json)
add_test(NAME cjson_printer_test COMMAND cjson_printer_test)
if (CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  target_compile_options(cjson_printer_test PRIVATE "-fconstexpr-steps=5000000")
endif()

add_subdirectory(JSONTestSuite)
